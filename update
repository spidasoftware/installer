#!/bin/bash

####################################################################################
# Vars
####################################################################################
dockerUsername=""
dockerPassword=""
dockerComposeFile=/etc/spida/docker-compose.yml
trustFlag=""

####################################################################################
# Parses Args
####################################################################################
function parseCommandLineArguments() {
  while [ $# -gt 0 ]
  do
      case "$1" in
          --username)  dockerUsername="$2"; shift;;
          --password)  dockerPassword="$2"; shift;;
          --composefile)  dockerComposeFile="$2"; shift;;
          --disableTrust) trustFlag="$2"; shift;;

          *)
              echo >&2 \
              "usage: $0 [option value]
                Options:
                  --username          dockerhub username (will prompt for username if argument is not passed)
                  --password          dockerhub password (will prompt for password if argument is not passed)
                  --composefile       the location of the docker compose file (defaults to $dockerComposeFile)
                  --disableTrust      check if docker container is signed (defaults to true)
              "
              exit 1;;
          *)  break;; # terminate while loop
      esac
      shift
  done
}

####################################################################################
# Logs in to Docker
####################################################################################
function dockerLogin() {
  if [[ "$dockerUsername" = "" ]]; then
    read -p "Docker username: " dockerUsername
  fi

  if [[ "$dockerPassword" = "" ]]; then
  	read  -s -p "Docker password: " dockerPassword
  fi

  sudo docker login -u $dockerUsername -p $dockerPassword
 
  if [ $? -ne 0 ]; then
    echo "login failed, exiting."
    exit 1
  fi

  
}

####################################################################################
# Sets local trustFlag variable to true if empty. 
####################################################################################
function setTrustFlag() {
  if [[ "$trustFlag" = "" ]]; then
    $trustFlag="true"
  fi
}

parseCommandLineArguments $@
dockerLogin
setTrustFlag

echo "stopping docker containers..."
sudo docker-compose -f $dockerComposeFile stop
echo "removing old docker containers..."
sudo docker-compose -f $dockerComposeFile rm --force
echo "updating docker containers..."
sudo docker-compose -f $dockerComposeFile pull --disable-content-trust=$trustFlag
if [ $? -ne 0 ]; then
    echo "Docker pull failed, exiting."
    echo "$?"
    exit 1
fi
echo "starting new docker containers..."
sudo docker-compose -f $dockerComposeFile up -d
echo "removing old docker images"
sudo docker system prune --all --force
sudo docker logout
