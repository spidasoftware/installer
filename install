#!/bin/bash

if [ -z "$1" ]; then
    echo "No machine argument supplied, exiting"
    exit -1
fi

OS=`cat /etc/issue`
VERSION=$(egrep -o "[0-9]{1,}\.[0-9]{1,}" <<< "$OS")

### First get Docker
### ---------------------------------------

#### Ubuntu Section
if [[ $OS == *"Ubuntu"* ]]; then
  echo "Ubuntu $VERSION"
  if(( $(bc <<< "$VERSION < 14.0") == 1 )); then
    echo "$VERSION is not a supported Ubuntu Version, need > 14.04"
    exit -1
  else
    sudo docker --version
    if [ $? -ne 0 ]; then
      echo "docker not installed...installing"
      # Check that HTTPS transport is available to APT
      if [ ! -e /usr/lib/apt/methods/https ]; then
        sudo apt-get update
        sudo apt-get install -y apt-transport-https
      fi

      # Add the repository to your APT sources
      sudo echo deb https://get.docker.com/ubuntu docker main > /etc/apt/sources.list.d/docker.list

      # Then import the repository key
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9

      # Install docker
      sudo apt-get update
      sudo apt-get install -y lxc-docker
      sudo source /etc/bash_completion.d/docker.io 

      sudo docker --version
    fi
  fi

#### RHEL Section
elif [[ $OS == *"Red Hat Enterprise Linux Server"* ]]; then
  echo "RHEL $VERSION"
  sudo yum update

  if(( $(bc <<< "$VERSION < 6.5") == 1 )); then
    echo "$VERSION is not a supported RHEL Version, need > 6.5"
    exit -1
  fi

  sudo docker --version
  if [ $? -ne 0 ]; then
    echo "docker not installed...installing"
    if(( $(bc <<< "$VERSION > 6.99") == 1 )); then
      # 7.0 plus
      sudo subscription-manager repos --enable=rhel-7-server-extras-rpms
      sudo yum -y install docker
    else
      # 6.5 but less than 7 
      sudo yum -y remove docker
      sudo yum -y install docker-io
      sudo yum -y update docker-io
    fi
    sudo docker --version
  fi

  #Start the service
  sudo service docker start
  sudo chkconfig docker on

#### SUSE Section - Check this on a SUSE system
# elif [[ $OS == *"SUSE"* ]]; then
  # if(( $(bc <<< "$VERSION == 12.3") == 1 )); then
  #   sudo zypper ar -f http://download.opensuse.org/repositories/Virtualization/openSUSE_12.3/ Virtualization
  # elif(( $(bc <<< "$VERSION == 13.1") == 1 )); then
  #   sudo zypper ar -f http://download.opensuse.org/repositories/Virtualization/openSUSE_13.1/ Virtualization
  # elif(( $(bc <<< "$VERSION < 13") == 1 )); then
  #   echo "$VERSION is not a supported SUSE Version, need 12.3 or 13.1"
  #   exit -1
  # fi
  # sudo zypper in docker
  # sudo systemctl start docker
  # sudo systemctl enable docker

else
  echo "$OS is not a supported OS"
  exit -1
fi

sudo docker-compose --version
if [ $? -ne 0 ]; then
  echo "docker-compose not installed...installing"
  sudo curl -L https://github.com/docker/compose/releases/download/1.1.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  sudo mv docker-compose /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose

  docker-compose --version
fi

echo "Creating the docker-compose files"
sudo touch docker-compose.yml
sudo chmod 666 docker-compose.yml
if [[ "$*" != *"--no-spidamin"* ]]; then
  echo "spidamin: 
image: spidasoftware/min:$1 
  restart: always 
  links: 
    - postgresql 
    - mongodb 
    - redis 
  ports: 
    - \"8000:8000\" 
    - \"8443:8443\"" >> docker-compose.yml
fi

if [[ "$*" != *"--no-postgresql"* ]]; then
  echo "postgresql: 
image: spidasoftware/postgresql 
  restart: always
  ports: 
    - \"5432:5432\"" >> docker-compose.yml
fi

if [[ "$*" != *"--no-mongodb"* ]]; then
  echo "mongodb: 
image: spidasoftware/mongodb 
  restart: always
  ports: 
    - \"27017:27017\"" >> docker-compose.yml
fi

if [[ "$*" != *"--no-redis"* ]]; then
  echo "redis: 
image: spidasoftware/redis 
restart: always" >> docker-compose.yml
fi

# Start docker
#sudo docker-compose up -d
